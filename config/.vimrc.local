" -----------------------------------------------------------------------------
"  公共函数
" -----------------------------------------------------------------------------
"获取当前文件名
function! GetFileName()
    return bufname(winbufnr(winnr()))  "获取当前窗口缓冲区的名字
endfunction

"获取当前时间，精确到分
function! GetDateTime()
    return strftime("%Y-%m-%d %H:%M")
endfunction

"获取指定字符重复次数的字符串
function! GetRepeatChar(char, count)
    let str = ''
	for a in range(a:count)
        let str = str.a:char
	endfor
    return str
endfunction

function! KyoExecStdout(...)
    if a:0
        let cmd = a:1
    else
        let cmd = '/tmp/run.sh'
    endif
    let str = getline(line('.'))
    if stridx(str, '''') != -1
        echomsg 'signal quote is not allowed!'
        return
    endif
    let tmpfile = system('mktemp | tr -d "\n"')
    silent exec '! path='.tmpfile.' '.cmd.' '''.str.''''
    silent exec 'normal dd'
    silent exec 'r '.tmpfile
    silent exec '! rm -f ' . tmpfile
    silent exec 'redraw!'
endfunction

function! KyoJavaApiDoc()
    silent exec '! japi "\<'.expand("<cword>").'\>" w3m'
    silent exec 'redraw!'
endfunction

nmap ,x :call KyoExecStdout()<CR><CR>
nmap ,jd :call KyoJavaApiDoc()<CR><CR>

function! KyoCtrlFcitx(op)
    if a:op == 1
        silent exec '! fcitx-remote -o'
    else
        silent exec '! fcitx-remote -c'
    endif
    silent exec 'redraw!'
endfunction

"退出插入模式时调用函数执行关闭输入法
" autocmd InsertLeave * call KyoCtrlFcitx(0)
"进入插入模式时调用函数执行激活输入法
" autocmd InsertEnter * call KyoCtrlFcitx(1)

function! KyoMySQLCmdView()
    let file = GetFileName()
    silent exec ':w'

    if bufwinnr(2) == -1
        " silent exec 'botright 15 split  -MySQL-'
        silent exec 'botright split  -MySQL-'
    elseif winnr() == 1
        silent exec 'wincmd w'
    endif
    setlocal modifiable
    silent exec 'normal ggVGx'
    silent exec ':r! ksql run $(realpath '.file.')'
    setlocal buflisted
    setlocal bufhidden=delete
    setlocal buftype=nofile
    setlocal nomodifiable
    setlocal noswapfile
    setlocal nowrap
    silent exec 'wincmd w'
endfunction

nnoremap ,sq :call KyoMySQLCmdView()<CR><CR>

function! KyoHtmlSet()
    setlocal shiftwidth=2
    setlocal tabstop=2
    setlocal softtabstop=2
endfunction

autocmd BufRead *.vue set ft=vue
autocmd BufRead *.stylus set ft=stylus
autocmd BufRead *.pug set ft=pug
autocmd FileType html,css,vue,stylus,pug exec "call KyoHtmlSet()"

function! KyoCopySel()
    silent exec '! cat /tmp/kyo.vim | xclip -i -sel clipboard'
    silent exec 'redraw!'
endfunction

vnoremap 'y :w! /tmp/kyo.vim<CR>:call KyoCopySel()<CR><CR>


" function GetVisualSelection()
    " let [lnum1, col1] = getpos("'<")[1:2]
    " let [lnum2, col2] = getpos("'>")[1:2]
    " let lines = getline(lnum1, lnum2)
    " let lines[-1] = lines[-1][: col2 - (&selection == 'inclusive' ? 1 : 2)]
    " let lines[0] = lines[0][col1 - 1:]
    " echo join(lines, '\n')
" endfunction

" vnoremap 'y :xclip -i -sel clipboard<CR>

set foldmethod=indent

nnoremap 'p :r! xclip -o -sel clipboard<CR>

" -----------------------------------------------------------------------------
"  其它
" -----------------------------------------------------------------------------

"打印当前日期
nnoremap ,date  i<C-R>=strftime("%Y-%m-%d")<ESC>:<CR>
"nnoremap ,date :r!date +\%Y-\%m-\%d:<CR>

"打印当前路径
if (g:islinux)
    nnoremap ,pwd i<C-R>=getcwd().'/'.GetFileName()<ESC><CR>
else
    nnoremap ,pwd i<C-R>=getcwd().'\'.GetFileName()<ESC><CR>
endif

"插入分割线
nnoremap ,kl i<C-R>=GetRepeatChar('-', 79)<ESC><CR>
nnoremap ,kg i<C-R>=GetRepeatChar('=', 79)<ESC><CR>

"自动给函数加括号
let @q="o{}ioj"

"javacomplete 自己写的脚本自动编译或运行java程序
nnoremap ,jr :! clear && jvr <C-R>=GetFileName()<CR><CR>

" autocmd FileType java setlocal omnifunc=javacomplete#Complete

nnoremap ,pr :!clear ; python3 %<CR>

nnoremap <F5> :! chromium-browser %<CR>
